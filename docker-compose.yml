version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: mail2feed-postgres
    environment:
      POSTGRES_DB: mail2feed
      POSTGRES_USER: mail2feed_user
      POSTGRES_PASSWORD: mail2feed_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-postgres.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mail2feed_user -d mail2feed"]
      interval: 10s
      timeout: 5s
      retries: 5

  # pgAdmin for database management (optional)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: mail2feed-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@mail2feed.local
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_LISTEN_PORT: 80
    ports:
      - "8080:80"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - pgadmin_data:/var/lib/pgadmin

  # Backend service (when ready for testing)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: mail2feed-backend
    environment:
      DATABASE_URL: postgres://mail2feed_user:mail2feed_password@postgres:5432/mail2feed
      RUST_LOG: debug
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - cargo_cache:/usr/local/cargo/registry
    working_dir: /app
    profiles:
      - backend  # Use docker-compose --profile backend up to include this service

  # Frontend service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: mail2feed-frontend
    environment:
      VITE_API_URL: http://localhost:3001
    ports:
      - "3002:3002"
    volumes:
      - ./frontend:/app
      - node_modules_cache:/app/node_modules
    working_dir: /app
    profiles:
      - frontend  # Use docker-compose --profile frontend up to include this service

volumes:
  postgres_data:
  pgadmin_data:
  cargo_cache:
  node_modules_cache: