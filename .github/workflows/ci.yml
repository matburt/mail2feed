name: CI

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'backend/**'
      - 'frontend/**'
      - 'k8s/**'
      - '.github/workflows/**'
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test-backend:
    name: Test Backend
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy

    - name: Cache Rust dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          backend/target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('backend/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libpq-dev libsqlite3-dev

    - name: Run backend tests
      working-directory: backend
      run: |
        cargo fmt --check
        cargo clippy -- -D warnings
        cargo test

  test-frontend:
    name: Test Frontend
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install frontend dependencies
      working-directory: frontend
      run: npm ci

    - name: Run frontend tests
      working-directory: frontend
      run: |
        npm run lint
        npm run type-check
        npm run test
        npm run build

  test-helm:
    name: Test Helm Chart
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Helm
      uses: azure/setup-helm@v3
      with:
        version: '3.12.0'

    - name: Add Helm repositories
      run: |
        helm repo add bitnami https://charts.bitnami.com/bitnami
        helm repo update

    - name: Build Helm dependencies
      run: |
        cd k8s
        helm dependency build mail2feed/

    - name: Lint Helm chart
      run: |
        cd k8s
        helm lint mail2feed/

    - name: Test Helm template rendering
      run: |
        cd k8s
        helm template mail2feed-test mail2feed/ --dry-run
        helm template mail2feed-test mail2feed/ --values mail2feed/values-dev.yaml --dry-run
        helm template mail2feed-test mail2feed/ --values mail2feed/values-prod.yaml --dry-run
        helm template mail2feed-test mail2feed/ --values mail2feed/values-external-db.yaml --dry-run